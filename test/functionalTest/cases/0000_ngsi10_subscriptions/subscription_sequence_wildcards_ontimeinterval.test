# Copyright 2013 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Subscription sequence wildcards ONINTERVAL

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart

--SHELL--

#
# 01. Create OfficeRoom/Room/temperature
# 02. Create OfficeRoom2/Room/temperature
# 03. Subscribe to OfficeRoom.*/Room/temperature with ONTIMEINTERVAL
# 04. Unsubscribe
# 05. Dump accumulator
#


echo "01. Create OfficeRoom/Room/temperature"
echo "======================================"
payload='<?xml version="1.0"?>
<updateContextRequest>
  <contextElementList>
        <contextElement>
          <entityId type="Room" isPattern="false">
              <id>OfficeRoom</id>
          </entityId>
          <contextAttributeList>
            <contextAttribute>
              <name>temperature</name>
              <type>degree</type>
              <contextValue>t100</contextValue>
            </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo

echo "02. Create OfficeRoom2/Room/temperature"
echo "======================================="
payload='<?xml version="1.0"?>
<updateContextRequest>
  <contextElementList>
        <contextElement>
          <entityId type="Room" isPattern="false">
              <id>OfficeRoom2</id>
          </entityId>
          <contextAttributeList>
            <contextAttribute>
              <name>temperature</name>
              <type>degree</type>
              <contextValue>t150</contextValue>
            </contextAttribute>
      </contextAttributeList>
    </contextElement>
  </contextElementList>
  <updateAction>APPEND</updateAction>
</updateContextRequest>'
orionCurl --url /v1/updateContext --payload "$payload"
echo
echo


echo "03. Subscribe to OfficeRoom.*/Room/temperature with ONTIMEINTERVAL"
echo "=================================================================="
payload='<?xml version="1.0"?>
<subscribeContextRequest>
  <entityIdList>
    <entityId type="Room" isPattern="true">
      <id>OfficeRoom.*</id>
    </entityId>
  </entityIdList>
  <attributeList>
    <attribute>temperature</attribute>
    <attribute>lightstatus</attribute>
  </attributeList>
  <reference>http://127.0.0.1:'${LISTENER_PORT}'/notify</reference>
  <duration>PT5H</duration>
  <notifyConditions>
    <notifyCondition>
      <type>ONTIMEINTERVAL</type>
      <condValueList>
        <condValue>PT2S</condValue>
      </condValueList>
      <restriction>restriction</restriction>
    </notifyCondition>
  </notifyConditions>
</subscribeContextRequest>'
orionCurl --url /v1/subscribeContext --payload "$payload"
SUB_ID=$(echo "$_response" | grep subscriptionId | awk -F '>' '{print $2}' | awk -F '<' '{print $1}' | grep -v '^$' )
echo
echo


# Wait 11 seconds, so we will receive 6 notifications (t=0, t=2, t=4, t=6, t=8, t=10)
sleep 11
valgrindSleep 1


echo "04. Unsubscribe"
echo "==============="
payload='<?xml version="1.0"?>
<unsubscribeContextRequest>
  <subscriptionId>'$SUB_ID'</subscriptionId>
</unsubscribeContextRequest>'
orionCurl --url /v1/unsubscribeContext --payload "$payload"
echo
echo


# Get accumulated data (only the first notification and the notification times)
echo "05. Dump accumulator"
echo "===================="
accumulatorDump
TIMES=$(curl localhost:${LISTENER_PORT}/times -s -S)
echo "TIMES: $TIMES"
echo
echo


--REGEXPECT--
01. Create OfficeRoom/Room/temperature
======================================
HTTP/1.1 200 OK
Content-Length: 640
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue/>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</updateContextResponse>


02. Create OfficeRoom2/Room/temperature
=======================================
HTTP/1.1 200 OK
Content-Length: 641
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<updateContextResponse>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom2</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue/>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</updateContextResponse>


03. Subscribe to OfficeRoom.*/Room/temperature with ONTIMEINTERVAL
==================================================================
HTTP/1.1 200 OK
Content-Length: 192
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<subscribeContextResponse>
  <subscribeResponse>
    <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
    <duration>PT5H</duration>
  </subscribeResponse>
</subscribeContextResponse>


04. Unsubscribe
===============
HTTP/1.1 200 OK
Content-Length: 207
Content-Type: application/xml
Date: REGEX(.*)

<?xml version="1.0"?>
<unsubscribeContextResponse>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <statusCode>
    <code>200</code>
    <reasonPhrase>OK</reasonPhrase>
  </statusCode>
</unsubscribeContextResponse>


05. Dump accumulator
====================
POST http://127.0.0.1:REGEX(\d+)/notify
Content-Length: 1286
User-Agent: orion/REGEX(\d+\.\d+\.\d+.* libcurl/\d+\.\d+\.\d+)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/xml

<notifyContextRequest>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <originator>localhost</originator>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue>t100</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom2</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue>t150</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</notifyContextRequest>
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Content-Length: 1286
User-Agent: orion/REGEX(\d+\.\d+\.\d+.* libcurl/\d+\.\d+\.\d+)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/xml

<notifyContextRequest>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <originator>localhost</originator>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue>t100</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom2</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue>t150</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</notifyContextRequest>
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Content-Length: 1286
User-Agent: orion/REGEX(\d+\.\d+\.\d+.* libcurl/\d+\.\d+\.\d+)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/xml

<notifyContextRequest>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <originator>localhost</originator>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue>t100</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom2</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue>t150</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</notifyContextRequest>
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Content-Length: 1286
User-Agent: orion/REGEX(\d+\.\d+\.\d+.* libcurl/\d+\.\d+\.\d+)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/xml

<notifyContextRequest>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <originator>localhost</originator>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue>t100</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom2</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue>t150</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</notifyContextRequest>
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Content-Length: 1286
User-Agent: orion/REGEX(\d+\.\d+\.\d+.* libcurl/\d+\.\d+\.\d+)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/xml

<notifyContextRequest>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <originator>localhost</originator>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue>t100</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom2</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue>t150</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</notifyContextRequest>
=======================================
POST http://127.0.0.1:REGEX(\d+)/notify
Content-Length: 1286
User-Agent: orion/REGEX(\d+\.\d+\.\d+.* libcurl/\d+\.\d+\.\d+)
Host: 127.0.0.1:REGEX(\d+)
Accept: application/xml, application/json
Content-Type: application/xml

<notifyContextRequest>
  <subscriptionId>REGEX([0-9a-f]{24})</subscriptionId>
  <originator>localhost</originator>
  <contextResponseList>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue>t100</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
    <contextElementResponse>
      <contextElement>
        <entityId type="Room" isPattern="false">
          <id>OfficeRoom2</id>
        </entityId>
        <contextAttributeList>
          <contextAttribute>
            <name>temperature</name>
            <type>degree</type>
            <contextValue>t150</contextValue>
          </contextAttribute>
        </contextAttributeList>
      </contextElement>
      <statusCode>
        <code>200</code>
        <reasonPhrase>OK</reasonPhrase>
      </statusCode>
    </contextElementResponse>
  </contextResponseList>
</notifyContextRequest>
=======================================
TIMES: 0, 2, 4, 6, 8, 10


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
